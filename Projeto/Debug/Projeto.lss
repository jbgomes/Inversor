
Projeto.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000007fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000786  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000cc  00800100  00800100  000007fa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000082c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  0000086c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000765  00000000  00000000  00000894  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000688  00000000  00000000  00000ff9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000296  00000000  00000000  00001681  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000007c  00000000  00000000  00001918  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000393  00000000  00000000  00001994  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000185  00000000  00000000  00001d27  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001eac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 43 00 	jmp	0x86	; 0x86 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 57 00 	jmp	0xae	; 0xae <__vector_11>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	05 a8       	ldd	r0, Z+53	; 0x35
  6a:	4c cd       	rjmp	.-1384   	; 0xfffffb04 <__eeprom_end+0xff7efb04>
  6c:	b2 d4       	rcall	.+2404   	; 0x9d2 <__stack+0xd3>
  6e:	4e b9       	out	0x0e, r20	; 14
  70:	38 36       	cpi	r19, 0x68	; 104
  72:	a9 02       	muls	r26, r25
  74:	0c 50       	subi	r16, 0x0C	; 12
  76:	b9 91       	ld	r27, Y+
  78:	86 88       	ldd	r8, Z+22	; 0x16
  7a:	08 3c       	cpi	r16, 0xC8	; 200
  7c:	a6 aa       	std	Z+54, r10	; 0x36
  7e:	aa 2a       	or	r10, r26
  80:	be 00       	.word	0x00be	; ????
  82:	00 00       	nop
  84:	80 3f       	cpi	r24, 0xF0	; 240

00000086 <__ctors_end>:
  86:	11 24       	eor	r1, r1
  88:	1f be       	out	0x3f, r1	; 63
  8a:	cf ef       	ldi	r28, 0xFF	; 255
  8c:	d8 e0       	ldi	r29, 0x08	; 8
  8e:	de bf       	out	0x3e, r29	; 62
  90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 3c       	cpi	r26, 0xCC	; 204
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 cb 00 	call	0x196	; 0x196 <main>
  a6:	0c 94 c1 03 	jmp	0x782	; 0x782 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <__vector_11>:

double seno_duty_cycle[PONTOS_SENO];
static int conta_interrupcoes = 0;
static int semiciclo = 0;

ISR(TIMER1_COMPA_vect) {
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	2f 93       	push	r18
  ba:	3f 93       	push	r19
  bc:	4f 93       	push	r20
  be:	5f 93       	push	r21
  c0:	6f 93       	push	r22
  c2:	7f 93       	push	r23
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	ef 93       	push	r30
  ce:	ff 93       	push	r31
	// A interrupção vai ser chamada a cada 65,1 us (15KHz)
	// A razão entre a frequência do PWM e do sinal de 60Hz é 256
	// Como considero o seno com 50 pontos, preciso representar cada ponto com 256/50 = ~5 interrupções
	conta_interrupcoes++;
  d0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <conta_interrupcoes>
  d4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <conta_interrupcoes+0x1>
  d8:	9c 01       	movw	r18, r24
  da:	2f 5f       	subi	r18, 0xFF	; 255
  dc:	3f 4f       	sbci	r19, 0xFF	; 255
  de:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <conta_interrupcoes+0x1>
  e2:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <conta_interrupcoes>
	
	int posicao_duty_cycle = (conta_interrupcoes - 1) / 5; // Indica a qual duty cycle essa interrupção pertence
	double duty_cycle = seno_duty_cycle[posicao_duty_cycle]; // Pega o valor do duty cycle na tabela
  e6:	65 e0       	ldi	r22, 0x05	; 5
  e8:	70 e0       	ldi	r23, 0x00	; 0
  ea:	0e 94 99 03 	call	0x732	; 0x732 <__divmodhi4>
  ee:	fb 01       	movw	r30, r22
  f0:	ee 0f       	add	r30, r30
  f2:	ff 1f       	adc	r31, r31
  f4:	ee 0f       	add	r30, r30
  f6:	ff 1f       	adc	r31, r31
  f8:	ec 5f       	subi	r30, 0xFC	; 252
  fa:	fe 4f       	sbci	r31, 0xFE	; 254
  fc:	60 81       	ld	r22, Z
  fe:	71 81       	ldd	r23, Z+1	; 0x01
 100:	82 81       	ldd	r24, Z+2	; 0x02
 102:	93 81       	ldd	r25, Z+3	; 0x03
	
	if (semiciclo == 0) {
 104:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata>
 108:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <_edata+0x1>
 10c:	23 2b       	or	r18, r19
 10e:	59 f4       	brne	.+22     	; 0x126 <__vector_11+0x78>
		// Está no semiciclo positivo
		OCR0A = 0; // Zera o Duty Cycle (PWM) das chaves do semiciclo negativo
 110:	17 bc       	out	0x27, r1	; 39
		OCR0B = 255 * duty_cycle; // OCR1A varia de 0 a 255, onde 0 = 0% e 255 = 100%
 112:	20 e0       	ldi	r18, 0x00	; 0
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	4f e7       	ldi	r20, 0x7F	; 127
 118:	53 e4       	ldi	r21, 0x43	; 67
 11a:	0e 94 36 02 	call	0x46c	; 0x46c <__mulsf3>
 11e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <__fixunssfsi>
 122:	68 bd       	out	0x28, r22	; 40
 124:	0a c0       	rjmp	.+20     	; 0x13a <__vector_11+0x8c>
	} else {
		// Está no semiciclo negativo
		OCR0B = 0; // Zera o Duty Cycle (PWM) das chaves do semiciclo positivo
 126:	18 bc       	out	0x28, r1	; 40
		OCR0A = 255 * duty_cycle; // OCR1A varia de 0 a 255, onde 0 = 0% e 255 = 100%
 128:	20 e0       	ldi	r18, 0x00	; 0
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	4f e7       	ldi	r20, 0x7F	; 127
 12e:	53 e4       	ldi	r21, 0x43	; 67
 130:	0e 94 36 02 	call	0x46c	; 0x46c <__mulsf3>
 134:	0e 94 79 01 	call	0x2f2	; 0x2f2 <__fixunssfsi>
 138:	67 bd       	out	0x27, r22	; 39
	}
	
	// Zera conta_interrupções e muda o semiciclo.
	if (conta_interrupcoes >= 250) {
 13a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <conta_interrupcoes>
 13e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <conta_interrupcoes+0x1>
 142:	8a 3f       	cpi	r24, 0xFA	; 250
 144:	91 05       	cpc	r25, r1
 146:	b4 f0       	brlt	.+44     	; 0x174 <__vector_11+0xc6>
		PORTB ^= 0b00010000;
 148:	95 b1       	in	r25, 0x05	; 5
 14a:	80 e1       	ldi	r24, 0x10	; 16
 14c:	89 27       	eor	r24, r25
 14e:	85 b9       	out	0x05, r24	; 5
		conta_interrupcoes = 0;
 150:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <conta_interrupcoes+0x1>
 154:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <conta_interrupcoes>
		semiciclo = !semiciclo;
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata>
 160:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <_edata+0x1>
 164:	23 2b       	or	r18, r19
 166:	11 f0       	breq	.+4      	; 0x16c <__vector_11+0xbe>
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 170:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	}
}
 174:	ff 91       	pop	r31
 176:	ef 91       	pop	r30
 178:	bf 91       	pop	r27
 17a:	af 91       	pop	r26
 17c:	9f 91       	pop	r25
 17e:	8f 91       	pop	r24
 180:	7f 91       	pop	r23
 182:	6f 91       	pop	r22
 184:	5f 91       	pop	r21
 186:	4f 91       	pop	r20
 188:	3f 91       	pop	r19
 18a:	2f 91       	pop	r18
 18c:	0f 90       	pop	r0
 18e:	0f be       	out	0x3f, r0	; 63
 190:	0f 90       	pop	r0
 192:	1f 90       	pop	r1
 194:	18 95       	reti

00000196 <main>:

int main(){
	DDRD = 0xFF; // Setando PD5 e PD6 na saída
 196:	8f ef       	ldi	r24, 0xFF	; 255
 198:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF; // Setando PD4 como saída
 19a:	84 b9       	out	0x04, r24	; 4
 19c:	04 e0       	ldi	r16, 0x04	; 4
 19e:	11 e0       	ldi	r17, 0x01	; 1
	
	for(int i = 0; i < PONTOS_SENO; i++){
 1a0:	c0 e0       	ldi	r28, 0x00	; 0
 1a2:	d0 e0       	ldi	r29, 0x00	; 0
		double duty_cycle = sin((i*M_PI)/PONTOS_SENO);
 1a4:	be 01       	movw	r22, r28
 1a6:	0d 2e       	mov	r0, r29
 1a8:	00 0c       	add	r0, r0
 1aa:	88 0b       	sbc	r24, r24
 1ac:	99 0b       	sbc	r25, r25
 1ae:	0e 94 aa 01 	call	0x354	; 0x354 <__floatsisf>
 1b2:	2b ed       	ldi	r18, 0xDB	; 219
 1b4:	3f e0       	ldi	r19, 0x0F	; 15
 1b6:	49 e4       	ldi	r20, 0x49	; 73
 1b8:	50 e4       	ldi	r21, 0x40	; 64
 1ba:	0e 94 36 02 	call	0x46c	; 0x46c <__mulsf3>
 1be:	20 e0       	ldi	r18, 0x00	; 0
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	48 e4       	ldi	r20, 0x48	; 72
 1c4:	52 e4       	ldi	r21, 0x42	; 66
 1c6:	0e 94 07 01 	call	0x20e	; 0x20e <__divsf3>
 1ca:	0e 94 a3 02 	call	0x546	; 0x546 <sin>
		seno_duty_cycle[i] = duty_cycle; // Varia de 0 a 1, onde 0 = 0% e 1 = 100%
 1ce:	f8 01       	movw	r30, r16
 1d0:	61 93       	st	Z+, r22
 1d2:	71 93       	st	Z+, r23
 1d4:	81 93       	st	Z+, r24
 1d6:	91 93       	st	Z+, r25
 1d8:	8f 01       	movw	r16, r30

int main(){
	DDRD = 0xFF; // Setando PD5 e PD6 na saída
	DDRB = 0xFF; // Setando PD4 como saída
	
	for(int i = 0; i < PONTOS_SENO; i++){
 1da:	21 96       	adiw	r28, 0x01	; 1
 1dc:	c2 33       	cpi	r28, 0x32	; 50
 1de:	d1 05       	cpc	r29, r1
 1e0:	09 f7       	brne	.-62     	; 0x1a4 <main+0xe>
		double duty_cycle = sin((i*M_PI)/PONTOS_SENO);
		seno_duty_cycle[i] = duty_cycle; // Varia de 0 a 1, onde 0 = 0% e 1 = 100%
	}
 
	TCCR1A = 0b00000010; // Configuração do timer para gerar uma interrupção por software
 1e2:	92 e0       	ldi	r25, 0x02	; 2
 1e4:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
	TCCR1B = 0b00000001; // Usa o clock sem prescaler. Então o PWM terá 64.25KHz
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	TIMSK1 = 0b00000010; // Habilita a comparação no estouro do contador
 1ee:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
	OCR1A = 255;
 1f2:	2f ef       	ldi	r18, 0xFF	; 255
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 1fa:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	
	TCCR0A = 0b10100011; // Habilita o modo PWM rápido, no modo invertido para OCR0A
 1fe:	93 ea       	ldi	r25, 0xA3	; 163
 200:	94 bd       	out	0x24, r25	; 36
	TCCR0B = 0b00000001; // Usa o clock sem prescaler. Então o PWM terá 64.25KHz
 202:	85 bd       	out	0x25, r24	; 37
	
	OCR0A = 200;
 204:	88 ec       	ldi	r24, 0xC8	; 200
 206:	87 bd       	out	0x27, r24	; 39
	OCR0B = 200;
 208:	88 bd       	out	0x28, r24	; 40
	sei(); // Habilita interrupções globais
 20a:	78 94       	sei
 20c:	ff cf       	rjmp	.-2      	; 0x20c <main+0x76>

0000020e <__divsf3>:
 20e:	0e 94 1b 01 	call	0x236	; 0x236 <__divsf3x>
 212:	0c 94 fc 01 	jmp	0x3f8	; 0x3f8 <__fp_round>
 216:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__fp_pscB>
 21a:	58 f0       	brcs	.+22     	; 0x232 <__divsf3+0x24>
 21c:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__fp_pscA>
 220:	40 f0       	brcs	.+16     	; 0x232 <__divsf3+0x24>
 222:	29 f4       	brne	.+10     	; 0x22e <__divsf3+0x20>
 224:	5f 3f       	cpi	r21, 0xFF	; 255
 226:	29 f0       	breq	.+10     	; 0x232 <__divsf3+0x24>
 228:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_inf>
 22c:	51 11       	cpse	r21, r1
 22e:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_szero>
 232:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_nan>

00000236 <__divsf3x>:
 236:	0e 94 0d 02 	call	0x41a	; 0x41a <__fp_split3>
 23a:	68 f3       	brcs	.-38     	; 0x216 <__divsf3+0x8>

0000023c <__divsf3_pse>:
 23c:	99 23       	and	r25, r25
 23e:	b1 f3       	breq	.-20     	; 0x22c <__divsf3+0x1e>
 240:	55 23       	and	r21, r21
 242:	91 f3       	breq	.-28     	; 0x228 <__divsf3+0x1a>
 244:	95 1b       	sub	r25, r21
 246:	55 0b       	sbc	r21, r21
 248:	bb 27       	eor	r27, r27
 24a:	aa 27       	eor	r26, r26
 24c:	62 17       	cp	r22, r18
 24e:	73 07       	cpc	r23, r19
 250:	84 07       	cpc	r24, r20
 252:	38 f0       	brcs	.+14     	; 0x262 <__divsf3_pse+0x26>
 254:	9f 5f       	subi	r25, 0xFF	; 255
 256:	5f 4f       	sbci	r21, 0xFF	; 255
 258:	22 0f       	add	r18, r18
 25a:	33 1f       	adc	r19, r19
 25c:	44 1f       	adc	r20, r20
 25e:	aa 1f       	adc	r26, r26
 260:	a9 f3       	breq	.-22     	; 0x24c <__divsf3_pse+0x10>
 262:	35 d0       	rcall	.+106    	; 0x2ce <__divsf3_pse+0x92>
 264:	0e 2e       	mov	r0, r30
 266:	3a f0       	brmi	.+14     	; 0x276 <__divsf3_pse+0x3a>
 268:	e0 e8       	ldi	r30, 0x80	; 128
 26a:	32 d0       	rcall	.+100    	; 0x2d0 <__divsf3_pse+0x94>
 26c:	91 50       	subi	r25, 0x01	; 1
 26e:	50 40       	sbci	r21, 0x00	; 0
 270:	e6 95       	lsr	r30
 272:	00 1c       	adc	r0, r0
 274:	ca f7       	brpl	.-14     	; 0x268 <__divsf3_pse+0x2c>
 276:	2b d0       	rcall	.+86     	; 0x2ce <__divsf3_pse+0x92>
 278:	fe 2f       	mov	r31, r30
 27a:	29 d0       	rcall	.+82     	; 0x2ce <__divsf3_pse+0x92>
 27c:	66 0f       	add	r22, r22
 27e:	77 1f       	adc	r23, r23
 280:	88 1f       	adc	r24, r24
 282:	bb 1f       	adc	r27, r27
 284:	26 17       	cp	r18, r22
 286:	37 07       	cpc	r19, r23
 288:	48 07       	cpc	r20, r24
 28a:	ab 07       	cpc	r26, r27
 28c:	b0 e8       	ldi	r27, 0x80	; 128
 28e:	09 f0       	breq	.+2      	; 0x292 <__divsf3_pse+0x56>
 290:	bb 0b       	sbc	r27, r27
 292:	80 2d       	mov	r24, r0
 294:	bf 01       	movw	r22, r30
 296:	ff 27       	eor	r31, r31
 298:	93 58       	subi	r25, 0x83	; 131
 29a:	5f 4f       	sbci	r21, 0xFF	; 255
 29c:	3a f0       	brmi	.+14     	; 0x2ac <__divsf3_pse+0x70>
 29e:	9e 3f       	cpi	r25, 0xFE	; 254
 2a0:	51 05       	cpc	r21, r1
 2a2:	78 f0       	brcs	.+30     	; 0x2c2 <__divsf3_pse+0x86>
 2a4:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_inf>
 2a8:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_szero>
 2ac:	5f 3f       	cpi	r21, 0xFF	; 255
 2ae:	e4 f3       	brlt	.-8      	; 0x2a8 <__divsf3_pse+0x6c>
 2b0:	98 3e       	cpi	r25, 0xE8	; 232
 2b2:	d4 f3       	brlt	.-12     	; 0x2a8 <__divsf3_pse+0x6c>
 2b4:	86 95       	lsr	r24
 2b6:	77 95       	ror	r23
 2b8:	67 95       	ror	r22
 2ba:	b7 95       	ror	r27
 2bc:	f7 95       	ror	r31
 2be:	9f 5f       	subi	r25, 0xFF	; 255
 2c0:	c9 f7       	brne	.-14     	; 0x2b4 <__divsf3_pse+0x78>
 2c2:	88 0f       	add	r24, r24
 2c4:	91 1d       	adc	r25, r1
 2c6:	96 95       	lsr	r25
 2c8:	87 95       	ror	r24
 2ca:	97 f9       	bld	r25, 7
 2cc:	08 95       	ret
 2ce:	e1 e0       	ldi	r30, 0x01	; 1
 2d0:	66 0f       	add	r22, r22
 2d2:	77 1f       	adc	r23, r23
 2d4:	88 1f       	adc	r24, r24
 2d6:	bb 1f       	adc	r27, r27
 2d8:	62 17       	cp	r22, r18
 2da:	73 07       	cpc	r23, r19
 2dc:	84 07       	cpc	r24, r20
 2de:	ba 07       	cpc	r27, r26
 2e0:	20 f0       	brcs	.+8      	; 0x2ea <__divsf3_pse+0xae>
 2e2:	62 1b       	sub	r22, r18
 2e4:	73 0b       	sbc	r23, r19
 2e6:	84 0b       	sbc	r24, r20
 2e8:	ba 0b       	sbc	r27, r26
 2ea:	ee 1f       	adc	r30, r30
 2ec:	88 f7       	brcc	.-30     	; 0x2d0 <__divsf3_pse+0x94>
 2ee:	e0 95       	com	r30
 2f0:	08 95       	ret

000002f2 <__fixunssfsi>:
 2f2:	0e 94 15 02 	call	0x42a	; 0x42a <__fp_splitA>
 2f6:	88 f0       	brcs	.+34     	; 0x31a <__fixunssfsi+0x28>
 2f8:	9f 57       	subi	r25, 0x7F	; 127
 2fa:	98 f0       	brcs	.+38     	; 0x322 <__fixunssfsi+0x30>
 2fc:	b9 2f       	mov	r27, r25
 2fe:	99 27       	eor	r25, r25
 300:	b7 51       	subi	r27, 0x17	; 23
 302:	b0 f0       	brcs	.+44     	; 0x330 <__fixunssfsi+0x3e>
 304:	e1 f0       	breq	.+56     	; 0x33e <__fixunssfsi+0x4c>
 306:	66 0f       	add	r22, r22
 308:	77 1f       	adc	r23, r23
 30a:	88 1f       	adc	r24, r24
 30c:	99 1f       	adc	r25, r25
 30e:	1a f0       	brmi	.+6      	; 0x316 <__fixunssfsi+0x24>
 310:	ba 95       	dec	r27
 312:	c9 f7       	brne	.-14     	; 0x306 <__fixunssfsi+0x14>
 314:	14 c0       	rjmp	.+40     	; 0x33e <__fixunssfsi+0x4c>
 316:	b1 30       	cpi	r27, 0x01	; 1
 318:	91 f0       	breq	.+36     	; 0x33e <__fixunssfsi+0x4c>
 31a:	0e 94 2f 02 	call	0x45e	; 0x45e <__fp_zero>
 31e:	b1 e0       	ldi	r27, 0x01	; 1
 320:	08 95       	ret
 322:	0c 94 2f 02 	jmp	0x45e	; 0x45e <__fp_zero>
 326:	67 2f       	mov	r22, r23
 328:	78 2f       	mov	r23, r24
 32a:	88 27       	eor	r24, r24
 32c:	b8 5f       	subi	r27, 0xF8	; 248
 32e:	39 f0       	breq	.+14     	; 0x33e <__fixunssfsi+0x4c>
 330:	b9 3f       	cpi	r27, 0xF9	; 249
 332:	cc f3       	brlt	.-14     	; 0x326 <__fixunssfsi+0x34>
 334:	86 95       	lsr	r24
 336:	77 95       	ror	r23
 338:	67 95       	ror	r22
 33a:	b3 95       	inc	r27
 33c:	d9 f7       	brne	.-10     	; 0x334 <__fixunssfsi+0x42>
 33e:	3e f4       	brtc	.+14     	; 0x34e <__fixunssfsi+0x5c>
 340:	90 95       	com	r25
 342:	80 95       	com	r24
 344:	70 95       	com	r23
 346:	61 95       	neg	r22
 348:	7f 4f       	sbci	r23, 0xFF	; 255
 34a:	8f 4f       	sbci	r24, 0xFF	; 255
 34c:	9f 4f       	sbci	r25, 0xFF	; 255
 34e:	08 95       	ret

00000350 <__floatunsisf>:
 350:	e8 94       	clt
 352:	09 c0       	rjmp	.+18     	; 0x366 <__floatsisf+0x12>

00000354 <__floatsisf>:
 354:	97 fb       	bst	r25, 7
 356:	3e f4       	brtc	.+14     	; 0x366 <__floatsisf+0x12>
 358:	90 95       	com	r25
 35a:	80 95       	com	r24
 35c:	70 95       	com	r23
 35e:	61 95       	neg	r22
 360:	7f 4f       	sbci	r23, 0xFF	; 255
 362:	8f 4f       	sbci	r24, 0xFF	; 255
 364:	9f 4f       	sbci	r25, 0xFF	; 255
 366:	99 23       	and	r25, r25
 368:	a9 f0       	breq	.+42     	; 0x394 <__floatsisf+0x40>
 36a:	f9 2f       	mov	r31, r25
 36c:	96 e9       	ldi	r25, 0x96	; 150
 36e:	bb 27       	eor	r27, r27
 370:	93 95       	inc	r25
 372:	f6 95       	lsr	r31
 374:	87 95       	ror	r24
 376:	77 95       	ror	r23
 378:	67 95       	ror	r22
 37a:	b7 95       	ror	r27
 37c:	f1 11       	cpse	r31, r1
 37e:	f8 cf       	rjmp	.-16     	; 0x370 <__floatsisf+0x1c>
 380:	fa f4       	brpl	.+62     	; 0x3c0 <__floatsisf+0x6c>
 382:	bb 0f       	add	r27, r27
 384:	11 f4       	brne	.+4      	; 0x38a <__floatsisf+0x36>
 386:	60 ff       	sbrs	r22, 0
 388:	1b c0       	rjmp	.+54     	; 0x3c0 <__floatsisf+0x6c>
 38a:	6f 5f       	subi	r22, 0xFF	; 255
 38c:	7f 4f       	sbci	r23, 0xFF	; 255
 38e:	8f 4f       	sbci	r24, 0xFF	; 255
 390:	9f 4f       	sbci	r25, 0xFF	; 255
 392:	16 c0       	rjmp	.+44     	; 0x3c0 <__floatsisf+0x6c>
 394:	88 23       	and	r24, r24
 396:	11 f0       	breq	.+4      	; 0x39c <__floatsisf+0x48>
 398:	96 e9       	ldi	r25, 0x96	; 150
 39a:	11 c0       	rjmp	.+34     	; 0x3be <__floatsisf+0x6a>
 39c:	77 23       	and	r23, r23
 39e:	21 f0       	breq	.+8      	; 0x3a8 <__floatsisf+0x54>
 3a0:	9e e8       	ldi	r25, 0x8E	; 142
 3a2:	87 2f       	mov	r24, r23
 3a4:	76 2f       	mov	r23, r22
 3a6:	05 c0       	rjmp	.+10     	; 0x3b2 <__floatsisf+0x5e>
 3a8:	66 23       	and	r22, r22
 3aa:	71 f0       	breq	.+28     	; 0x3c8 <__floatsisf+0x74>
 3ac:	96 e8       	ldi	r25, 0x86	; 134
 3ae:	86 2f       	mov	r24, r22
 3b0:	70 e0       	ldi	r23, 0x00	; 0
 3b2:	60 e0       	ldi	r22, 0x00	; 0
 3b4:	2a f0       	brmi	.+10     	; 0x3c0 <__floatsisf+0x6c>
 3b6:	9a 95       	dec	r25
 3b8:	66 0f       	add	r22, r22
 3ba:	77 1f       	adc	r23, r23
 3bc:	88 1f       	adc	r24, r24
 3be:	da f7       	brpl	.-10     	; 0x3b6 <__floatsisf+0x62>
 3c0:	88 0f       	add	r24, r24
 3c2:	96 95       	lsr	r25
 3c4:	87 95       	ror	r24
 3c6:	97 f9       	bld	r25, 7
 3c8:	08 95       	ret

000003ca <__fp_inf>:
 3ca:	97 f9       	bld	r25, 7
 3cc:	9f 67       	ori	r25, 0x7F	; 127
 3ce:	80 e8       	ldi	r24, 0x80	; 128
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	60 e0       	ldi	r22, 0x00	; 0
 3d4:	08 95       	ret

000003d6 <__fp_nan>:
 3d6:	9f ef       	ldi	r25, 0xFF	; 255
 3d8:	80 ec       	ldi	r24, 0xC0	; 192
 3da:	08 95       	ret

000003dc <__fp_pscA>:
 3dc:	00 24       	eor	r0, r0
 3de:	0a 94       	dec	r0
 3e0:	16 16       	cp	r1, r22
 3e2:	17 06       	cpc	r1, r23
 3e4:	18 06       	cpc	r1, r24
 3e6:	09 06       	cpc	r0, r25
 3e8:	08 95       	ret

000003ea <__fp_pscB>:
 3ea:	00 24       	eor	r0, r0
 3ec:	0a 94       	dec	r0
 3ee:	12 16       	cp	r1, r18
 3f0:	13 06       	cpc	r1, r19
 3f2:	14 06       	cpc	r1, r20
 3f4:	05 06       	cpc	r0, r21
 3f6:	08 95       	ret

000003f8 <__fp_round>:
 3f8:	09 2e       	mov	r0, r25
 3fa:	03 94       	inc	r0
 3fc:	00 0c       	add	r0, r0
 3fe:	11 f4       	brne	.+4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 400:	88 23       	and	r24, r24
 402:	52 f0       	brmi	.+20     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 404:	bb 0f       	add	r27, r27
 406:	40 f4       	brcc	.+16     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 408:	bf 2b       	or	r27, r31
 40a:	11 f4       	brne	.+4      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40c:	60 ff       	sbrs	r22, 0
 40e:	04 c0       	rjmp	.+8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 410:	6f 5f       	subi	r22, 0xFF	; 255
 412:	7f 4f       	sbci	r23, 0xFF	; 255
 414:	8f 4f       	sbci	r24, 0xFF	; 255
 416:	9f 4f       	sbci	r25, 0xFF	; 255
 418:	08 95       	ret

0000041a <__fp_split3>:
 41a:	57 fd       	sbrc	r21, 7
 41c:	90 58       	subi	r25, 0x80	; 128
 41e:	44 0f       	add	r20, r20
 420:	55 1f       	adc	r21, r21
 422:	59 f0       	breq	.+22     	; 0x43a <__fp_splitA+0x10>
 424:	5f 3f       	cpi	r21, 0xFF	; 255
 426:	71 f0       	breq	.+28     	; 0x444 <__fp_splitA+0x1a>
 428:	47 95       	ror	r20

0000042a <__fp_splitA>:
 42a:	88 0f       	add	r24, r24
 42c:	97 fb       	bst	r25, 7
 42e:	99 1f       	adc	r25, r25
 430:	61 f0       	breq	.+24     	; 0x44a <__fp_splitA+0x20>
 432:	9f 3f       	cpi	r25, 0xFF	; 255
 434:	79 f0       	breq	.+30     	; 0x454 <__fp_splitA+0x2a>
 436:	87 95       	ror	r24
 438:	08 95       	ret
 43a:	12 16       	cp	r1, r18
 43c:	13 06       	cpc	r1, r19
 43e:	14 06       	cpc	r1, r20
 440:	55 1f       	adc	r21, r21
 442:	f2 cf       	rjmp	.-28     	; 0x428 <__fp_split3+0xe>
 444:	46 95       	lsr	r20
 446:	f1 df       	rcall	.-30     	; 0x42a <__fp_splitA>
 448:	08 c0       	rjmp	.+16     	; 0x45a <__fp_splitA+0x30>
 44a:	16 16       	cp	r1, r22
 44c:	17 06       	cpc	r1, r23
 44e:	18 06       	cpc	r1, r24
 450:	99 1f       	adc	r25, r25
 452:	f1 cf       	rjmp	.-30     	; 0x436 <__fp_splitA+0xc>
 454:	86 95       	lsr	r24
 456:	71 05       	cpc	r23, r1
 458:	61 05       	cpc	r22, r1
 45a:	08 94       	sec
 45c:	08 95       	ret

0000045e <__fp_zero>:
 45e:	e8 94       	clt

00000460 <__fp_szero>:
 460:	bb 27       	eor	r27, r27
 462:	66 27       	eor	r22, r22
 464:	77 27       	eor	r23, r23
 466:	cb 01       	movw	r24, r22
 468:	97 f9       	bld	r25, 7
 46a:	08 95       	ret

0000046c <__mulsf3>:
 46c:	0e 94 49 02 	call	0x492	; 0x492 <__mulsf3x>
 470:	0c 94 fc 01 	jmp	0x3f8	; 0x3f8 <__fp_round>
 474:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__fp_pscA>
 478:	38 f0       	brcs	.+14     	; 0x488 <__mulsf3+0x1c>
 47a:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__fp_pscB>
 47e:	20 f0       	brcs	.+8      	; 0x488 <__mulsf3+0x1c>
 480:	95 23       	and	r25, r21
 482:	11 f0       	breq	.+4      	; 0x488 <__mulsf3+0x1c>
 484:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_inf>
 488:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_nan>
 48c:	11 24       	eor	r1, r1
 48e:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_szero>

00000492 <__mulsf3x>:
 492:	0e 94 0d 02 	call	0x41a	; 0x41a <__fp_split3>
 496:	70 f3       	brcs	.-36     	; 0x474 <__mulsf3+0x8>

00000498 <__mulsf3_pse>:
 498:	95 9f       	mul	r25, r21
 49a:	c1 f3       	breq	.-16     	; 0x48c <__mulsf3+0x20>
 49c:	95 0f       	add	r25, r21
 49e:	50 e0       	ldi	r21, 0x00	; 0
 4a0:	55 1f       	adc	r21, r21
 4a2:	62 9f       	mul	r22, r18
 4a4:	f0 01       	movw	r30, r0
 4a6:	72 9f       	mul	r23, r18
 4a8:	bb 27       	eor	r27, r27
 4aa:	f0 0d       	add	r31, r0
 4ac:	b1 1d       	adc	r27, r1
 4ae:	63 9f       	mul	r22, r19
 4b0:	aa 27       	eor	r26, r26
 4b2:	f0 0d       	add	r31, r0
 4b4:	b1 1d       	adc	r27, r1
 4b6:	aa 1f       	adc	r26, r26
 4b8:	64 9f       	mul	r22, r20
 4ba:	66 27       	eor	r22, r22
 4bc:	b0 0d       	add	r27, r0
 4be:	a1 1d       	adc	r26, r1
 4c0:	66 1f       	adc	r22, r22
 4c2:	82 9f       	mul	r24, r18
 4c4:	22 27       	eor	r18, r18
 4c6:	b0 0d       	add	r27, r0
 4c8:	a1 1d       	adc	r26, r1
 4ca:	62 1f       	adc	r22, r18
 4cc:	73 9f       	mul	r23, r19
 4ce:	b0 0d       	add	r27, r0
 4d0:	a1 1d       	adc	r26, r1
 4d2:	62 1f       	adc	r22, r18
 4d4:	83 9f       	mul	r24, r19
 4d6:	a0 0d       	add	r26, r0
 4d8:	61 1d       	adc	r22, r1
 4da:	22 1f       	adc	r18, r18
 4dc:	74 9f       	mul	r23, r20
 4de:	33 27       	eor	r19, r19
 4e0:	a0 0d       	add	r26, r0
 4e2:	61 1d       	adc	r22, r1
 4e4:	23 1f       	adc	r18, r19
 4e6:	84 9f       	mul	r24, r20
 4e8:	60 0d       	add	r22, r0
 4ea:	21 1d       	adc	r18, r1
 4ec:	82 2f       	mov	r24, r18
 4ee:	76 2f       	mov	r23, r22
 4f0:	6a 2f       	mov	r22, r26
 4f2:	11 24       	eor	r1, r1
 4f4:	9f 57       	subi	r25, 0x7F	; 127
 4f6:	50 40       	sbci	r21, 0x00	; 0
 4f8:	9a f0       	brmi	.+38     	; 0x520 <__mulsf3_pse+0x88>
 4fa:	f1 f0       	breq	.+60     	; 0x538 <__mulsf3_pse+0xa0>
 4fc:	88 23       	and	r24, r24
 4fe:	4a f0       	brmi	.+18     	; 0x512 <__mulsf3_pse+0x7a>
 500:	ee 0f       	add	r30, r30
 502:	ff 1f       	adc	r31, r31
 504:	bb 1f       	adc	r27, r27
 506:	66 1f       	adc	r22, r22
 508:	77 1f       	adc	r23, r23
 50a:	88 1f       	adc	r24, r24
 50c:	91 50       	subi	r25, 0x01	; 1
 50e:	50 40       	sbci	r21, 0x00	; 0
 510:	a9 f7       	brne	.-22     	; 0x4fc <__mulsf3_pse+0x64>
 512:	9e 3f       	cpi	r25, 0xFE	; 254
 514:	51 05       	cpc	r21, r1
 516:	80 f0       	brcs	.+32     	; 0x538 <__mulsf3_pse+0xa0>
 518:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_inf>
 51c:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_szero>
 520:	5f 3f       	cpi	r21, 0xFF	; 255
 522:	e4 f3       	brlt	.-8      	; 0x51c <__mulsf3_pse+0x84>
 524:	98 3e       	cpi	r25, 0xE8	; 232
 526:	d4 f3       	brlt	.-12     	; 0x51c <__mulsf3_pse+0x84>
 528:	86 95       	lsr	r24
 52a:	77 95       	ror	r23
 52c:	67 95       	ror	r22
 52e:	b7 95       	ror	r27
 530:	f7 95       	ror	r31
 532:	e7 95       	ror	r30
 534:	9f 5f       	subi	r25, 0xFF	; 255
 536:	c1 f7       	brne	.-16     	; 0x528 <__mulsf3_pse+0x90>
 538:	fe 2b       	or	r31, r30
 53a:	88 0f       	add	r24, r24
 53c:	91 1d       	adc	r25, r1
 53e:	96 95       	lsr	r25
 540:	87 95       	ror	r24
 542:	97 f9       	bld	r25, 7
 544:	08 95       	ret

00000546 <sin>:
 546:	9f 93       	push	r25
 548:	0e 94 ad 02 	call	0x55a	; 0x55a <__fp_rempio2>
 54c:	0f 90       	pop	r0
 54e:	07 fc       	sbrc	r0, 7
 550:	ee 5f       	subi	r30, 0xFE	; 254
 552:	0c 94 d6 02 	jmp	0x5ac	; 0x5ac <__fp_sinus>
 556:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_nan>

0000055a <__fp_rempio2>:
 55a:	0e 94 15 02 	call	0x42a	; 0x42a <__fp_splitA>
 55e:	d8 f3       	brcs	.-10     	; 0x556 <sin+0x10>
 560:	e8 94       	clt
 562:	e0 e0       	ldi	r30, 0x00	; 0
 564:	bb 27       	eor	r27, r27
 566:	9f 57       	subi	r25, 0x7F	; 127
 568:	f0 f0       	brcs	.+60     	; 0x5a6 <__fp_rempio2+0x4c>
 56a:	2a ed       	ldi	r18, 0xDA	; 218
 56c:	3f e0       	ldi	r19, 0x0F	; 15
 56e:	49 ec       	ldi	r20, 0xC9	; 201
 570:	06 c0       	rjmp	.+12     	; 0x57e <__fp_rempio2+0x24>
 572:	ee 0f       	add	r30, r30
 574:	bb 0f       	add	r27, r27
 576:	66 1f       	adc	r22, r22
 578:	77 1f       	adc	r23, r23
 57a:	88 1f       	adc	r24, r24
 57c:	28 f0       	brcs	.+10     	; 0x588 <__fp_rempio2+0x2e>
 57e:	b2 3a       	cpi	r27, 0xA2	; 162
 580:	62 07       	cpc	r22, r18
 582:	73 07       	cpc	r23, r19
 584:	84 07       	cpc	r24, r20
 586:	28 f0       	brcs	.+10     	; 0x592 <__fp_rempio2+0x38>
 588:	b2 5a       	subi	r27, 0xA2	; 162
 58a:	62 0b       	sbc	r22, r18
 58c:	73 0b       	sbc	r23, r19
 58e:	84 0b       	sbc	r24, r20
 590:	e3 95       	inc	r30
 592:	9a 95       	dec	r25
 594:	72 f7       	brpl	.-36     	; 0x572 <__fp_rempio2+0x18>
 596:	80 38       	cpi	r24, 0x80	; 128
 598:	30 f4       	brcc	.+12     	; 0x5a6 <__fp_rempio2+0x4c>
 59a:	9a 95       	dec	r25
 59c:	bb 0f       	add	r27, r27
 59e:	66 1f       	adc	r22, r22
 5a0:	77 1f       	adc	r23, r23
 5a2:	88 1f       	adc	r24, r24
 5a4:	d2 f7       	brpl	.-12     	; 0x59a <__fp_rempio2+0x40>
 5a6:	90 48       	sbci	r25, 0x80	; 128
 5a8:	0c 94 52 03 	jmp	0x6a4	; 0x6a4 <__fp_mpack_finite>

000005ac <__fp_sinus>:
 5ac:	ef 93       	push	r30
 5ae:	e0 ff       	sbrs	r30, 0
 5b0:	07 c0       	rjmp	.+14     	; 0x5c0 <__fp_sinus+0x14>
 5b2:	a2 ea       	ldi	r26, 0xA2	; 162
 5b4:	2a ed       	ldi	r18, 0xDA	; 218
 5b6:	3f e0       	ldi	r19, 0x0F	; 15
 5b8:	49 ec       	ldi	r20, 0xC9	; 201
 5ba:	5f eb       	ldi	r21, 0xBF	; 191
 5bc:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__addsf3x>
 5c0:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__fp_round>
 5c4:	0f 90       	pop	r0
 5c6:	03 94       	inc	r0
 5c8:	01 fc       	sbrc	r0, 1
 5ca:	90 58       	subi	r25, 0x80	; 128
 5cc:	e8 e6       	ldi	r30, 0x68	; 104
 5ce:	f0 e0       	ldi	r31, 0x00	; 0
 5d0:	0c 94 5e 03 	jmp	0x6bc	; 0x6bc <__fp_powsodd>
 5d4:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__fp_pscA>
 5d8:	38 f0       	brcs	.+14     	; 0x5e8 <__fp_sinus+0x3c>
 5da:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__fp_pscB>
 5de:	20 f0       	brcs	.+8      	; 0x5e8 <__fp_sinus+0x3c>
 5e0:	39 f4       	brne	.+14     	; 0x5f0 <__fp_sinus+0x44>
 5e2:	9f 3f       	cpi	r25, 0xFF	; 255
 5e4:	19 f4       	brne	.+6      	; 0x5ec <__fp_sinus+0x40>
 5e6:	26 f4       	brtc	.+8      	; 0x5f0 <__fp_sinus+0x44>
 5e8:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_nan>
 5ec:	0e f4       	brtc	.+2      	; 0x5f0 <__fp_sinus+0x44>
 5ee:	e0 95       	com	r30
 5f0:	e7 fb       	bst	r30, 7
 5f2:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_inf>

000005f6 <__addsf3x>:
 5f6:	e9 2f       	mov	r30, r25
 5f8:	0e 94 0d 02 	call	0x41a	; 0x41a <__fp_split3>
 5fc:	58 f3       	brcs	.-42     	; 0x5d4 <__fp_sinus+0x28>
 5fe:	ba 17       	cp	r27, r26
 600:	62 07       	cpc	r22, r18
 602:	73 07       	cpc	r23, r19
 604:	84 07       	cpc	r24, r20
 606:	95 07       	cpc	r25, r21
 608:	20 f0       	brcs	.+8      	; 0x612 <__addsf3x+0x1c>
 60a:	79 f4       	brne	.+30     	; 0x62a <__addsf3x+0x34>
 60c:	a6 f5       	brtc	.+104    	; 0x676 <__addsf3x+0x80>
 60e:	0c 94 2f 02 	jmp	0x45e	; 0x45e <__fp_zero>
 612:	0e f4       	brtc	.+2      	; 0x616 <__addsf3x+0x20>
 614:	e0 95       	com	r30
 616:	0b 2e       	mov	r0, r27
 618:	ba 2f       	mov	r27, r26
 61a:	a0 2d       	mov	r26, r0
 61c:	0b 01       	movw	r0, r22
 61e:	b9 01       	movw	r22, r18
 620:	90 01       	movw	r18, r0
 622:	0c 01       	movw	r0, r24
 624:	ca 01       	movw	r24, r20
 626:	a0 01       	movw	r20, r0
 628:	11 24       	eor	r1, r1
 62a:	ff 27       	eor	r31, r31
 62c:	59 1b       	sub	r21, r25
 62e:	99 f0       	breq	.+38     	; 0x656 <__addsf3x+0x60>
 630:	59 3f       	cpi	r21, 0xF9	; 249
 632:	50 f4       	brcc	.+20     	; 0x648 <__addsf3x+0x52>
 634:	50 3e       	cpi	r21, 0xE0	; 224
 636:	68 f1       	brcs	.+90     	; 0x692 <__addsf3x+0x9c>
 638:	1a 16       	cp	r1, r26
 63a:	f0 40       	sbci	r31, 0x00	; 0
 63c:	a2 2f       	mov	r26, r18
 63e:	23 2f       	mov	r18, r19
 640:	34 2f       	mov	r19, r20
 642:	44 27       	eor	r20, r20
 644:	58 5f       	subi	r21, 0xF8	; 248
 646:	f3 cf       	rjmp	.-26     	; 0x62e <__addsf3x+0x38>
 648:	46 95       	lsr	r20
 64a:	37 95       	ror	r19
 64c:	27 95       	ror	r18
 64e:	a7 95       	ror	r26
 650:	f0 40       	sbci	r31, 0x00	; 0
 652:	53 95       	inc	r21
 654:	c9 f7       	brne	.-14     	; 0x648 <__addsf3x+0x52>
 656:	7e f4       	brtc	.+30     	; 0x676 <__addsf3x+0x80>
 658:	1f 16       	cp	r1, r31
 65a:	ba 0b       	sbc	r27, r26
 65c:	62 0b       	sbc	r22, r18
 65e:	73 0b       	sbc	r23, r19
 660:	84 0b       	sbc	r24, r20
 662:	ba f0       	brmi	.+46     	; 0x692 <__addsf3x+0x9c>
 664:	91 50       	subi	r25, 0x01	; 1
 666:	a1 f0       	breq	.+40     	; 0x690 <__addsf3x+0x9a>
 668:	ff 0f       	add	r31, r31
 66a:	bb 1f       	adc	r27, r27
 66c:	66 1f       	adc	r22, r22
 66e:	77 1f       	adc	r23, r23
 670:	88 1f       	adc	r24, r24
 672:	c2 f7       	brpl	.-16     	; 0x664 <__addsf3x+0x6e>
 674:	0e c0       	rjmp	.+28     	; 0x692 <__addsf3x+0x9c>
 676:	ba 0f       	add	r27, r26
 678:	62 1f       	adc	r22, r18
 67a:	73 1f       	adc	r23, r19
 67c:	84 1f       	adc	r24, r20
 67e:	48 f4       	brcc	.+18     	; 0x692 <__addsf3x+0x9c>
 680:	87 95       	ror	r24
 682:	77 95       	ror	r23
 684:	67 95       	ror	r22
 686:	b7 95       	ror	r27
 688:	f7 95       	ror	r31
 68a:	9e 3f       	cpi	r25, 0xFE	; 254
 68c:	08 f0       	brcs	.+2      	; 0x690 <__addsf3x+0x9a>
 68e:	b0 cf       	rjmp	.-160    	; 0x5f0 <__fp_sinus+0x44>
 690:	93 95       	inc	r25
 692:	88 0f       	add	r24, r24
 694:	08 f0       	brcs	.+2      	; 0x698 <__addsf3x+0xa2>
 696:	99 27       	eor	r25, r25
 698:	ee 0f       	add	r30, r30
 69a:	97 95       	ror	r25
 69c:	87 95       	ror	r24
 69e:	08 95       	ret

000006a0 <__fp_mpack>:
 6a0:	9f 3f       	cpi	r25, 0xFF	; 255
 6a2:	31 f0       	breq	.+12     	; 0x6b0 <__fp_mpack_finite+0xc>

000006a4 <__fp_mpack_finite>:
 6a4:	91 50       	subi	r25, 0x01	; 1
 6a6:	20 f4       	brcc	.+8      	; 0x6b0 <__fp_mpack_finite+0xc>
 6a8:	87 95       	ror	r24
 6aa:	77 95       	ror	r23
 6ac:	67 95       	ror	r22
 6ae:	b7 95       	ror	r27
 6b0:	88 0f       	add	r24, r24
 6b2:	91 1d       	adc	r25, r1
 6b4:	96 95       	lsr	r25
 6b6:	87 95       	ror	r24
 6b8:	97 f9       	bld	r25, 7
 6ba:	08 95       	ret

000006bc <__fp_powsodd>:
 6bc:	9f 93       	push	r25
 6be:	8f 93       	push	r24
 6c0:	7f 93       	push	r23
 6c2:	6f 93       	push	r22
 6c4:	ff 93       	push	r31
 6c6:	ef 93       	push	r30
 6c8:	9b 01       	movw	r18, r22
 6ca:	ac 01       	movw	r20, r24
 6cc:	0e 94 36 02 	call	0x46c	; 0x46c <__mulsf3>
 6d0:	ef 91       	pop	r30
 6d2:	ff 91       	pop	r31
 6d4:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__fp_powser>
 6d8:	2f 91       	pop	r18
 6da:	3f 91       	pop	r19
 6dc:	4f 91       	pop	r20
 6de:	5f 91       	pop	r21
 6e0:	0c 94 36 02 	jmp	0x46c	; 0x46c <__mulsf3>

000006e4 <__fp_powser>:
 6e4:	df 93       	push	r29
 6e6:	cf 93       	push	r28
 6e8:	1f 93       	push	r17
 6ea:	0f 93       	push	r16
 6ec:	ff 92       	push	r15
 6ee:	ef 92       	push	r14
 6f0:	df 92       	push	r13
 6f2:	7b 01       	movw	r14, r22
 6f4:	8c 01       	movw	r16, r24
 6f6:	68 94       	set
 6f8:	06 c0       	rjmp	.+12     	; 0x706 <__fp_powser+0x22>
 6fa:	da 2e       	mov	r13, r26
 6fc:	ef 01       	movw	r28, r30
 6fe:	0e 94 49 02 	call	0x492	; 0x492 <__mulsf3x>
 702:	fe 01       	movw	r30, r28
 704:	e8 94       	clt
 706:	a5 91       	lpm	r26, Z+
 708:	25 91       	lpm	r18, Z+
 70a:	35 91       	lpm	r19, Z+
 70c:	45 91       	lpm	r20, Z+
 70e:	55 91       	lpm	r21, Z+
 710:	a6 f3       	brts	.-24     	; 0x6fa <__fp_powser+0x16>
 712:	ef 01       	movw	r28, r30
 714:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__addsf3x>
 718:	fe 01       	movw	r30, r28
 71a:	97 01       	movw	r18, r14
 71c:	a8 01       	movw	r20, r16
 71e:	da 94       	dec	r13
 720:	69 f7       	brne	.-38     	; 0x6fc <__fp_powser+0x18>
 722:	df 90       	pop	r13
 724:	ef 90       	pop	r14
 726:	ff 90       	pop	r15
 728:	0f 91       	pop	r16
 72a:	1f 91       	pop	r17
 72c:	cf 91       	pop	r28
 72e:	df 91       	pop	r29
 730:	08 95       	ret

00000732 <__divmodhi4>:
 732:	97 fb       	bst	r25, 7
 734:	07 2e       	mov	r0, r23
 736:	16 f4       	brtc	.+4      	; 0x73c <__divmodhi4+0xa>
 738:	00 94       	com	r0
 73a:	07 d0       	rcall	.+14     	; 0x74a <__divmodhi4_neg1>
 73c:	77 fd       	sbrc	r23, 7
 73e:	09 d0       	rcall	.+18     	; 0x752 <__divmodhi4_neg2>
 740:	0e 94 ad 03 	call	0x75a	; 0x75a <__udivmodhi4>
 744:	07 fc       	sbrc	r0, 7
 746:	05 d0       	rcall	.+10     	; 0x752 <__divmodhi4_neg2>
 748:	3e f4       	brtc	.+14     	; 0x758 <__divmodhi4_exit>

0000074a <__divmodhi4_neg1>:
 74a:	90 95       	com	r25
 74c:	81 95       	neg	r24
 74e:	9f 4f       	sbci	r25, 0xFF	; 255
 750:	08 95       	ret

00000752 <__divmodhi4_neg2>:
 752:	70 95       	com	r23
 754:	61 95       	neg	r22
 756:	7f 4f       	sbci	r23, 0xFF	; 255

00000758 <__divmodhi4_exit>:
 758:	08 95       	ret

0000075a <__udivmodhi4>:
 75a:	aa 1b       	sub	r26, r26
 75c:	bb 1b       	sub	r27, r27
 75e:	51 e1       	ldi	r21, 0x11	; 17
 760:	07 c0       	rjmp	.+14     	; 0x770 <__udivmodhi4_ep>

00000762 <__udivmodhi4_loop>:
 762:	aa 1f       	adc	r26, r26
 764:	bb 1f       	adc	r27, r27
 766:	a6 17       	cp	r26, r22
 768:	b7 07       	cpc	r27, r23
 76a:	10 f0       	brcs	.+4      	; 0x770 <__udivmodhi4_ep>
 76c:	a6 1b       	sub	r26, r22
 76e:	b7 0b       	sbc	r27, r23

00000770 <__udivmodhi4_ep>:
 770:	88 1f       	adc	r24, r24
 772:	99 1f       	adc	r25, r25
 774:	5a 95       	dec	r21
 776:	a9 f7       	brne	.-22     	; 0x762 <__udivmodhi4_loop>
 778:	80 95       	com	r24
 77a:	90 95       	com	r25
 77c:	bc 01       	movw	r22, r24
 77e:	cd 01       	movw	r24, r26
 780:	08 95       	ret

00000782 <_exit>:
 782:	f8 94       	cli

00000784 <__stop_program>:
 784:	ff cf       	rjmp	.-2      	; 0x784 <__stop_program>
